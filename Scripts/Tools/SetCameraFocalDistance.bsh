/*
<?xml version='1.0' standalone='yes' ?>

<script>
	<name>SetCameraFocalDistance</name>
	<author>TroY</author>
	<version>1.1</version>
	<date>2010-07-20</date>
	<description>
Set the focal distance of a camera so that one specific object is
exactly in focus.


See also: http://www.aoi-board.de/index.php?action=posts&amp;fid=12&amp;tid=898
    </description>
</script>
*/

// Find/select a camera and a target.
boolean findCameraAndTarget()
{
	Scene scene = window.getScene();
	int[] selind = window.getSelectedIndices();
	switch (selind.length)
	{
		case 0:
			print("You need to select at least the to-be-focused object.");
			return false;

		case 1:
			// See if there are 0 or 1 cameras in the scene.
			int numcams = 0;
			for (ObjectInfo oi : scene.getAllObjects())
			{
				if (oi.getObject() instanceof SceneCamera)
				{
					cam = oi;
					numcams++;
				}
			}

			if (numcams == 0)
			{
				print("There are no cameras in the scene.");
				return false;
			}
			// numcams == 1 means we got the camera. Else we need to
			// present a dialog.
			else if (numcams != 1)
			{
				// We need to associate cameras with their names because
				// ".toString()" on an ObjectInfo doesn't return a
				// readable name.
				class InfoTuple
				{
					public ObjectInfo cam;
					public InfoTuple(ObjectInfo cam)
					{
						this.cam = cam;
					}
					public String toString()
					{
						return cam.getName();
					}
				}

				// Fill a list with all cams in the scene.
				Object[] col = new Object[numcams];
				int at = 0;
				for (ObjectInfo oi : scene.getAllObjects())
				{
					if (oi.getObject() instanceof SceneCamera)
					{
						col[at++] = new InfoTuple(oi);
					}
				}

				BList listWidget = new BList(col);
				listWidget.setMultipleSelectionEnabled(false);

				// Present a dialog.
				ComponentsDialog dlg = new ComponentsDialog(
						window,
						"Please select a camera in the scene",
						new Widget[] { listWidget },
						new String[] { "Available cams:" }
						);

				if (!dlg.clickedOk())
					return false;

				cam = listWidget.getSelectedValue().cam;
			}

			target = scene.getObject(selind[0]);
			break;

		case 2:
			cam = scene.getObject(selind[0]);
			target = scene.getObject(selind[1]);

			// Exchange if cam is not a cam. :)
			if (!(cam.getObject() instanceof SceneCamera))
			{
				tmp = cam;
				cam = target;
				target = tmp;
			}

			if (!(cam.getObject() instanceof SceneCamera) &&
					!(target.getObject() instanceof SceneCamera))
			{
				print("None of the selected objects is a Scene Camera.");
				return false;
			}
			break;

		default:
			print("You need to select at most two objects: " +
					"A target and (optionally) a camera.");
			return false;
	}

	return true;
}

// Sort out which objects are selected... window, cam and target are
// used as global variables inside of findCameraAndTarget().
ObjectInfo cam = null;
ObjectInfo target = null;

if (!findCameraAndTarget())
	return;

// Calc focal distance and set it.
Vec3 tpos = target.getCoords().getOrigin();
Vec3 cpos = cam.getCoords().getOrigin();
Vec3 cdir = cam.getCoords().getZDirection();
cdir.normalize();

double alpha = cdir.dot(tpos.minus(cpos));

if (alpha < 0.0)
{
	print("Whoops. Looks like the object is behind the camera.");
	return;
}

cam.getObject().setFocalDistance(alpha);
print("Focal distance set to " + alpha);
